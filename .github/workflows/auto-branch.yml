name: Auto-Branch Creation

on:
  issues:
    types: [labeled, assigned]

jobs:
  create-branch:
    if: |
      (contains(github.event.label.name, 'approved') || 
       github.event.action == 'assigned') &&
      contains(github.event.issue.labels.*.name, 'external-contribution')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create branch for external contributor
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          BRANCH_NAME="AIRA-${ISSUE_NUMBER}"
          ASSIGNEE="${{ github.event.issue.assignee.login }}"
          
          # Configure git
          git config user.name "aira-bot[bot]"
          git config user.email "aira-bot[bot]@users.noreply.github.com"
          
          # Create and push branch
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME
          
      - name: Comment on issue with instructions
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.issue.number;
            const branchName = `AIRA-${issueNumber}`;
            const assignee = context.payload.issue.assignee?.login || 'contributor';
            
            const commentBody = `ðŸš€ **Branch Ready for Development**

Hi @${assignee}! Your branch \`${branchName}\` has been created and is ready for development.

## Next Steps:

### 1. Checkout the branch
\`\`\`bash
# Using GitHub CLI (recommended)
gh issue develop ${issueNumber} --checkout

# Or manually
git fetch origin
git checkout ${branchName}
\`\`\`

### 2. Development Guidelines
- Keep commits focused and atomic
- Follow our commit message format: \`type: description\`
- Reference this issue in commits: \`Closes #${issueNumber}\`
- Run tests before pushing: \`pytest tests/\`

### 3. Create PR when ready
\`\`\`bash
gh pr create --fill
\`\`\`

### 4. Need Help?
- Check our [Contributing Guide](CONTRIBUTING.md)
- Ask questions in this issue
- Join our [Discord](https://discord.gg/aira) for real-time help

Happy coding! ðŸŽ‰

---
*This comment was automatically generated by AIRA Bot*`;

            await github.rest.issues.createComment({
              issue_number: issueNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });